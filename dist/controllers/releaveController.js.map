{"version":3,"sources":["../../src/controllers/releaveController.js"],"names":["mongoose","require","User","model","Restroom","strings","expressJwt","jwt","get_user","req","res","findById","params","id","err","user","status","send","json","create_user","newUser","body","save","update_user","findOneAndUpdate","_id","new","delete_user","findByIdAndRemove","message","get_restroom","restroom","create_restroom","new_restroom","update_restroom","delete_restroom","get_area_restrooms","query","min_lat","max_lat","min_lng","max_lng","find","lat","$gt","$lt","lng","restrooms","authenticate","secret","TOKEN_GEN_SECRET","requestProperty","get_token","get","unless","path","handle_auth_error","next","name","error","create_token","auth","sign","expiresIn","generate_token","token","send_token","setHeader","check_auth","upsert_fb_user","findOne","savedUser","console","log","get_current_user","get_one","toObject","module","exports"],"mappings":"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","file":"releaveController.js","sourcesContent":["\"use strict\";\nvar mongoose = require('mongoose'),\n\tUser = mongoose.model('Users'),\n\tRestroom = mongoose.model('Restrooms'),\n\tstrings = require('../private_strings'),\n\texpressJwt = require('express-jwt'),\n\tjwt = require('jsonwebtoken');\n\n/*\n * USER FUNCTIONS\n */\n\n// This function fetches a user\nvar get_user = function(req, res) {\n\t// Find user with matching ID\n\tUser.findById(req.params.id, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (user === null) {\n\t\t\t// If user is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// User was found - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(200).send(user);\n\t\t}\n\t});\n};\n\n// This function creates a user\nvar create_user = function(req, res) {\n\tvar newUser = new User(req.body);\n\tnewUser.save(function(err, user) {\n\t\t// If there was an error, send it back to the client\n\t\tif (err) {\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// User was created - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(201).json(user);\n\t\t}\n\t});\n};\n\n// This function updates a user\nvar update_user = function(req, res) {\n\tUser.findOneAndUpdate({_id: req.params.id }, req.body, { new: true }, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (user === null) {\n\t\t\t// If user is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// User was updated - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(200).json(user);\n\t\t}\n\t});\n};\n\n// This function deletes a user\nvar delete_user = function(req, res) {\n\t// Delete user\n\tUser.findByIdAndRemove(req.params.id, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (user === null) {\n\t\t\t// If user is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// User was found and deleted - return to client\n\t\t\tres.status(200).json({ message: 'User successfully deleted' });\n\t\t}\n\t});\n}\n\n/*\n * RESTROOM FUNCTIONS\n */\n\n// This function fetches a restroom\nvar get_restroom = function(req, res) {\n\t// Find restroom with matching ID\n\tRestroom.findById(req.params.id, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (restroom === null) {\n\t\t\t// If restroom is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was found - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(200).send(restroom);\n\t\t}\n\t});\n};\n\n// This function creates a restroom\nvar create_restroom = function(req, res) {\n\tvar new_restroom = new Restroom(req.body);\n\tnew_restroom.save(function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was created - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(201).json(restroom);\n\t\t}\n\t});\n};\n\n// This method updates a restroom\nvar update_restroom = function(req, res) {\n\tRestroom.findOneAndUpdate({_id: req.params.id }, req.body, { new: true }, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (restroom === null) {\n\t\t\t// If restroom is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was updated - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(200).json(restroom);\n\t\t}\n\t});\n};\n\n// This function deletes a restroom\nvar delete_restroom = function(req, res) {\n\t// Delete restroom\n\tRestroom.findByIdAndRemove(req.params.id, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (restroom === null) {\n\t\t\t// If restroom is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was found and deleted - return to client\n\t\t\tres.status(200).json({ message: 'Restroom successfully deleted' });\n\t\t}\n\t});\n}\n\n// This function gets restrooms in a given area\nvar get_area_restrooms = function(req, res) {\n\tif (!req.query.min_lat || !req.query.max_lat || !req.query.min_lng || !req.query.max_lng) {\n\t\t// Latitudes and longitudes were not all passed - return error\n\t\tres.status(401).json(\"{}\");\n\t} else {\n\t\t// Find restrooms in the given latitude and longitude ranges\n\t\tRestroom.find({\n\t\t\tlat: { $gt: req.query.min_lat, $lt: req.query.max_lat },\n\t\t\tlng: { $gt: req.query.min_lng, $lt: req.query.max_lng }\n\t\t}, function(err, restrooms) {\n\t\t\tif (err) {\n\t\t\t\t// If there was an error, return it to the user\n\t\t\t\tres.status(500).send(\"{}\");\n\t\t\t} else {\n\t\t\t\t// Query successful - return restrooms to user\n\t\t\t\tres.status(200).json(restrooms);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n * AUTH & LOGIN FUNCTIONS\n */\n\n// This function verifies an authorization token passed to each request as a header.\nvar authenticate = expressJwt({\n\tsecret: strings.TOKEN_GEN_SECRET,\n\trequestProperty: 'auth',\n\tget_token: function(req) {\n\t\tif (req.get('Authorization')) {\n\t\t\t// Token is valid\n\t\t\treturn req.get(\"Authorization\");\n\t\t}\n\t\t// Token is not valid\n\t\treturn null;\n\t}\n}).unless({ path: [/^\\/auth\\/facebook\\/.*/] }); // Login endpoint is only that does not not require an auth token\n\n// If there was an error with the auth token, send it back to the client.\nvar handle_auth_error = function(err, req, res, next) {\n\tif(err.name === 'UnauthorizedError') {\n\t\tres.status(401).send({ error: err.message });\n\t \treturn;\n\t}\n\tnext();\n}\n\nvar create_token = function(auth) {\n  return jwt.sign({\n    id: auth.id\n  }, strings.TOKEN_GEN_SECRET,\n  {\n    expiresIn: 60 * 60 * 24  // 1 day expiration\n  });\n};\n\nvar generate_token = function (req, res, next) {\n  req.token = create_token(req.auth);\n  next();\n};\n\nvar send_token = function (req, res) {\n  res.setHeader('Authorization', req.token);\n  res.status(200).send(req.user);\n};\n\nvar check_auth = function(req, res, next) {\n\tif (!req.user) {\n\t\t// User is not authenticated - return\n\t\treturn res.send(401, \"User not authenticated\");\n\t}\n\n\t// Prepare token for API\n\treq.auth = {\n\t\tid: req.user.id\n\t}\n\n\tnext();\n};\n\n// This function returns a user, creating a new one if necessary\nvar upsert_fb_user = function(req, res, next) {\n\t// Find user with matching facbook_id\n\treturn User.findOne({\n\t\t'facebook_id': req.params.id\n\t}, function(err, user) {\n\t\tif (!user) {\n\t\t\t// If user is null, create new one\n\t\t\tvar newUser = new User(req.body);\n\n\t\t\t// Save new user\n\t\t\tnewUser.save(function(error, savedUser) {\n\t\t\t\tif (error) {\n\t\t\t\t\t// Handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\treturn res.send(err);\n\t\t\t\t}\n\t\t\t\treq.user = savedUser;\n\t\t\t\treturn next();\n\t\t\t});\n\t\t} else if (!err) {\n\t\t\t// If user was found, return data\n\t\t\treq.user = user;\n\t\t\t// Move on\n\t\t\treturn next();\n\t\t}\n\t});\n};\n\nvar get_current_user = function(req, res, next) {\n  User.findById(req.auth.id, function(err, user) {\n    if (err) {\n      \tnext(err);\n    } else {\n      \treq.user = user;\n      \tnext();\n    }\n  });\n};\n\nvar get_one = function (req, res) {\n  var user = req.user.toObject();\n\n  delete user['__v'];\n\n  res.status(200).json(user);\n};\n\nmodule.exports = {\n\tget_user: get_user,\n\tcreate_user: create_user,\n\tupdate_user: update_user,\n\tdelete_user: delete_user,\n\tget_restroom: get_restroom,\n\tcreate_restroom: create_restroom,\n\tupdate_restroom: update_restroom,\n\tdelete_restroom: delete_restroom,\n\tget_area_restrooms: get_area_restrooms,\n\tauthenticate: authenticate,\n\thandle_auth_error: handle_auth_error,\n\tupsert_fb_user: upsert_fb_user,\n\tcreate_token: create_token,\n\tgenerate_token: generate_token,\n\tsend_token: send_token,\n\tcheck_auth: check_auth,\n\tget_current_user: get_current_user,\n\tget_one: get_one\n};\n"]}