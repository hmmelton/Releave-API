{"version":3,"sources":["../../src/controllers/releaveController.js"],"names":["mongoose","require","User","model","Restroom","strings","stripe","STRIPE_SECRET_KEY","express_jwt","jwt","create_charge","req","res","query","stripe_token","status","json","error","amount","token","charges","create","currency","description","source","err","charge","send","get_user","findById","params","id","user","create_user","newUser","body","save","update_user","findOneAndUpdate","_id","new","delete_user","findByIdAndRemove","message","get_restroom","restroom","create_restroom","new_restroom","update_restroom","delete_restroom","get_area_restrooms","min_lat","max_lat","min_lng","max_lng","find","lat","$gt","$lt","lng","restrooms","authenticate","secret","TOKEN_GEN_SECRET","requestProperty","get_token","get","unless","path","handle_auth_error","next","name","create_token","auth","sign","expiresIn","generate_token","send_token","setHeader","check_auth","upsert_fb_user","findOne","savedUser","console","log","get_current_user","get_one","toObject","module","exports"],"mappings":"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","file":"releaveController.js","sourcesContent":["\"use strict\";\nvar mongoose = require('mongoose'),\n\tUser = mongoose.model('Users'),\n\tRestroom = mongoose.model('Restrooms'),\n\tstrings = require('../private_strings'),\n\tstripe = require('stripe')(strings.STRIPE_SECRET_KEY),\n\texpress_jwt = require('express-jwt'),\n\tjwt = require('jsonwebtoken');\n\n// This function makes a charge to a card\n//\n// TEST FUNCTION\n//\nvar create_charge = function(req, res) {\n\tif (!req.query.stripe_token) {\n\t\t// Stripe token was not passed - send error to client\n\t\tres.status(400).json({ error: 'Query parameter stripe_token is required' });\n\t} else if (!req.query.amount) {\n\t\t// Amount not specified\n\t\tres.status(400).json({ error: 'Query parameter amount is required' });\n\t} else {\n\t\tvar token = req.query.stripe_token;\n\n\t\t// Charge card\n\t\tstripe.charges.create({\n\t\t\tamount: req.query.amount,\n\t\t\tcurrency: \"usd\",\n\t\t\tdescription: \"test charge\",\n\t\t\tsource: token\n\t\t}, function(err, charge) {\n\t\t\tif (err) {\n\t\t\t\t// There was an error with the charge\n\t\t\t\tres.status(500).send(err);\n\t\t\t} else {\n\t\t\t\t// Charge was completed successfully\n\t\t\t\tres.status(200).json(charge);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n * USER FUNCTIONS\n */\n\n// This function fetches a user\nvar get_user = function(req, res) {\n\t// Find user with matching ID\n\tUser.findById(req.params.id, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (user === null) {\n\t\t\t// If user is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// User was found - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(200).send(user);\n\t\t}\n\t});\n};\n\n// This function creates a user\nvar create_user = function(req, res) {\n\tvar newUser = new User(req.body);\n\tnewUser.save(function(err, user) {\n\t\t// If there was an error, send it back to the client\n\t\tif (err) {\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// User was created - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(201).json(user);\n\t\t}\n\t});\n};\n\n// This function updates a user\nvar update_user = function(req, res) {\n\tUser.findOneAndUpdate({_id: req.params.id }, req.body, { new: true }, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// User was updated - return to client\n\t\t\tdelete user['__v'];\n\t\t\tres.status(200).json(user);\n\t\t}\n\t});\n};\n\n// This function deletes a user\nvar delete_user = function(req, res) {\n\t// Delete user\n\tUser.findByIdAndRemove(req.params.id, function(err, user) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (user === null) {\n\t\t\t// If user is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// User was found and deleted - return to client\n\t\t\tres.status(200).json({ message: 'User successfully deleted' });\n\t\t}\n\t});\n}\n\n/*\n * RESTROOM FUNCTIONS\n */\n\n// This function fetches a restroom\nvar get_restroom = function(req, res) {\n\t// Find restroom with matching ID\n\tRestroom.findById(req.params.id, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (restroom === null) {\n\t\t\t// If restroom is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was found - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(200).send(restroom);\n\t\t}\n\t});\n};\n\n// This function creates a restroom\nvar create_restroom = function(req, res) {\n\tvar new_restroom = new Restroom(req.body);\n\tnew_restroom.save(function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was created - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(201).json(restroom);\n\t\t}\n\t});\n};\n\n// This method updates a restroom\nvar update_restroom = function(req, res) {\n\tRestroom.findOneAndUpdate({_id: req.params.id }, req.body, { new: true }, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was updated - return to client\n\t\t\tdelete restroom['__v'];\n\t\t\tres.status(200).json(restroom);\n\t\t}\n\t});\n};\n\n// This function deletes a restroom\nvar delete_restroom = function(req, res) {\n\t// Delete restroom\n\tRestroom.findByIdAndRemove(req.params.id, function(err, restroom) {\n\t\tif (err) {\n\t\t\t// If there was an error, send it back to the client\n\t\t\tres.status(500).send(\"{}\");\n\t\t} else if (restroom === null) {\n\t\t\t// If restroom is null, send back error to client\n\t\t\tres.status(404).json(\"{}\");\n\t\t} else {\n\t\t\t// Restroom was found and deleted - return to client\n\t\t\tres.status(200).json({ message: 'Restroom successfully deleted' });\n\t\t}\n\t});\n}\n\n// This function gets restrooms in a given area\nvar get_area_restrooms = function(req, res) {\n\tif (!req.query.min_lat || !req.query.max_lat || !req.query.min_lng || !req.query.max_lng) {\n\t\t// Latitudes and longitudes were not all passed - return error\n\t\tres.status(401).json(\"{}\");\n\t} else {\n\t\t// Find restrooms in the given latitude and longitude ranges\n\t\tRestroom.find({\n\t\t\tlat: { $gt: req.query.min_lat, $lt: req.query.max_lat },\n\t\t\tlng: { $gt: req.query.min_lng, $lt: req.query.max_lng }\n\t\t}, function(err, restrooms) {\n\t\t\tif (err) {\n\t\t\t\t// If there was an error, return it to the user\n\t\t\t\tres.status(500).send(\"{}\");\n\t\t\t} else {\n\t\t\t\t// Query successful - return restrooms to user\n\t\t\t\tres.status(200).json(restrooms);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n * AUTH & LOGIN FUNCTIONS\n */\n\n// This function verifies an authorization token passed to each request as a header.\nvar authenticate = express_jwt({\n\tsecret: strings.TOKEN_GEN_SECRET,\n\trequestProperty: 'auth',\n\tget_token: function(req) {\n\t\tif (req.get('Authorization')) {\n\t\t\t// Token is valid\n\t\t\treturn req.get(\"Authorization\");\n\t\t}\n\t\t// Token is not valid\n\t\treturn null;\n\t}\n}).unless({ path: [/^\\/auth\\/facebook\\/.*/] }); // Login endpoint is only that does not not require an auth token\n\n// If there was an error with the auth token, send it back to the client.\nvar handle_auth_error = function(err, req, res, next) {\n\tif(err.name === 'UnauthorizedError') {\n\t\tres.status(401).send({ error: err.message });\n\t \treturn;\n\t}\n\tnext();\n}\n\nvar create_token = function(auth) {\n  return jwt.sign({\n    id: auth.id\n  }, strings.TOKEN_GEN_SECRET,\n  {\n    expiresIn: 60 * 60 * 24  // 1 day expiration\n  });\n};\n\nvar generate_token = function (req, res, next) {\n  req.token = create_token(req.auth);\n  next();\n};\n\nvar send_token = function (req, res) {\n  res.setHeader('Authorization', req.token);\n  res.status(200).send(req.user);\n};\n\nvar check_auth = function(req, res, next) {\n\tif (!req.user) {\n\t\t// User is not authenticated - return\n\t\treturn res.send(401, \"User not authenticated\");\n\t}\n\n\t// Prepare token for API\n\treq.auth = {\n\t\tid: req.user.id\n\t}\n\n\tnext();\n};\n\n// This function returns a user, creating a new one if necessary\nvar upsert_fb_user = function(req, res, next) {\n\t// Find user with matching facbook_id\n\treturn User.findOne({\n\t\t'facebook_id': req.params.id\n\t}, function(err, user) {\n\t\tif (!user) {\n\t\t\t// If user is null, create new one\n\t\t\tvar newUser = new User(req.body);\n\n\t\t\t// Save new user\n\t\t\tnewUser.save(function(error, savedUser) {\n\t\t\t\tif (error) {\n\t\t\t\t\t// Handle error\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t\treq.user = savedUser;\n\t\t\t\treturn next();\n\t\t\t});\n\t\t} else if (!err) {\n\t\t\t// If user was found, return data\n\t\t\treq.user = user;\n\t\t\t// Move on\n\t\t\treturn next();\n\t\t}\n\t});\n};\n\nvar get_current_user = function(req, res, next) {\n  User.findById(req.auth.id, function(err, user) {\n    if (err) {\n      \tnext(err);\n    } else {\n      \treq.user = user;\n      \tnext();\n    }\n  });\n};\n\nvar get_one = function (req, res) {\n  var user = req.user.toObject();\n\n  delete user['__v'];\n\n  res.status(200).json(user);\n};\n\nmodule.exports = {\n\tcreate_charge: create_charge,\n\tget_user: get_user,\n\tcreate_user: create_user,\n\tupdate_user: update_user,\n\tdelete_user: delete_user,\n\tget_restroom: get_restroom,\n\tcreate_restroom: create_restroom,\n\tupdate_restroom: update_restroom,\n\tdelete_restroom: delete_restroom,\n\tget_area_restrooms: get_area_restrooms,\n\tauthenticate: authenticate,\n\thandle_auth_error: handle_auth_error,\n\tupsert_fb_user: upsert_fb_user,\n\tcreate_token: create_token,\n\tgenerate_token: generate_token,\n\tsend_token: send_token,\n\tcheck_auth: check_auth,\n\tget_current_user: get_current_user,\n\tget_one: get_one\n};\n"]}